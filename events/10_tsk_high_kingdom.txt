namespace = tsk_high_kingdom

#	High King decides king tier status in his realm
character_event = {
	id = tsk_high_kingdom.0
	desc = EVTDESCTSK_HIGH_KINGDOM0
	picture = GFX_evt_diplomat_hf

	is_triggered_only = yes

	#hide_window = yes

	immediate = {
	}
	
	option = { #Let them keep their titles.
		name = EVTOPTATSK_HIGH_KINGDOM0
		
		custom_tooltip = {
			text = TSKHIGHKINGDOMEVT0CUSTOM1
		}
		primary_title = { add_law_w_cooldown = { law = centralization_0 opinion_effect = yes } }
		any_realm_lord = {
			limit = {
				tier = KING
			}
		}
	}
	
	option = { #Let them keep their rank but I am the king.
		name = EVTOPTBTSK_HIGH_KINGDOM0
		
		custom_tooltip = {
			text = TSKHIGHKINGDOMEVT0CUSTOM1
		}
		primary_title = { add_law_w_cooldown = { law = centralization_1 opinion_effect = yes } }
		any_realm_lord = {
			limit = {
				tier = KING
			}
		}
	}
	
	option = { #There is only one king!
		name = EVTOPTCTSK_HIGH_KINGDOM0
		
		#custom_tooltip = {
		#	text = TSKHIGHKINGDOMEVT0CUSTOM2
		#}
		primary_title = { add_law_w_cooldown = { law = centralization_2 opinion_effect = yes } }
		any_realm_lord = {
			limit = {
				tier = KING
			}
		}
	}
}

#	Independent ruler can decide to join the claimant, stay neutral or join the opposers
character_event = {
	id = tsk_high_kingdom.1
	desc = EVTDESCTSK_HIGH_KINGDOM1
	picture = GFX_evt_diplomat_hf

	is_triggered_only = yes

	#hide_window = yes

	immediate = {
		
	}
	
	option = { # This is none of my concern
		name = EVTOPTATSK_HIGH_KINGDOM1
		trigger = {
		#	always = no
		}
		set_flag = is_none_concerner
		
		ai_chance = {
			factor = 20
			modifier = {
				factor = 0
				OR = {
					trait = proud
					trait = ambitious
				}
			}
			modifier = {
				factor = 1.3
				trait = humble
			}
			modifier = {
				factor = 1.5
				event_target:high_king = {
					NOR = {
						religion_group = ROOT
						culture_group = ROOT
					}
				}
			}
		}
	}
	
	option = { # I shall follow him!
		name = EVTOPTBTSK_HIGH_KINGDOM1
		trigger = {
			#always = no
			tsk_location_high_kingdom_claimed_trigger = yes
			NOT = { is_vassal_or_below_of = FROM }
		}
		
		custom_tooltip = {
			text = TSKHIGHKINGDOMEVT1CUSTOM1
			set_flag = is_supporter
			event_target:high_king = {
				ROOT = { set_flag = is_supporter_of_@PREV }
			}
			set_defacto_liege = FROM
		}
		
		ai_chance = {
			factor = 20
			modifier = {
				factor = 0.2
				OR = {
					trait = proud
					trait = ambitious
				}
			}
			modifier = {
				factor = 1.4
				trait = humble
			}
			modifier = {
				factor = 1.5
				event_target:high_king = {
					religion_group = ROOT
				}
			}
			modifier = {
				factor = 1.5
				event_target:high_king = {
					culture_group = ROOT
				}
			}
			modifier = {
				factor = 1.4
				event_target:high_king = {
					prestige = 2000
				}
			}
			modifier = {
				factor = 1.7
				event_target:high_king = {
					prestige = 4500
				}
			}
			modifier = {
				factor = 2.2
				event_target:high_king = {
					prestige = 8000
				}
			}
		}
	}
	
	option = { # I will oppose the High King!
		name = EVTOPTCTSK_HIGH_KINGDOM1
		trigger = {
			tsk_location_high_kingdom_claimed_trigger = yes
			NOT = { is_vassal_or_below_of = FROM }
		}
		
		custom_tooltip = {
			text = TSKHIGHKINGDOMEVT1CUSTOM2
			set_flag = is_opposer
			event_target:high_king = {
				ROOT = { set_flag = is_opposer_of_@PREV }
			}
		}
		
		ai_chance = {
			factor = 35
			modifier = {
				factor = 1.3
				trait = proud
			}
			modifier = {
				factor = 1.3
				trait = ambitious
			}
			modifier = {
				factor = 1.7
				event_target:high_king = {
					NOR = {
						religion_group = ROOT
						culture_group = ROOT
					}
				}
			}
		}
	}
	
	option = { # I should be king!
		name = EVTOPTDTSK_HIGH_KINGDOM1
		trigger = {
			#always = no
			#tsk_location_high_kingdom_claimed_trigger = yes
			NOT = { is_vassal_or_below_of = FROM }
			OR = {
				trait = ambitious
				tsk_has_become_high_king_ambition = yes
			}
		}
		FROM = {
			primary_title = {
				ROOT = {
					add_claim = PREV
				}
			}
		}
		set_flag = is_opposer
		set_flag = is_claimant_opposer
		custom_tooltip = {
			text = TSKHIGHKINGDOMEVT1CUSTOM3
		}
		
		ai_chance = {
			factor = 35
			modifier = {
				factor = 1.3
				trait = proud
			}
			modifier = {
				factor = 1.3
				trait = ambitious
			}
		}
	}
}

#	Choses claimant if there are more than one
character_event = {
	id = tsk_high_kingdom.2
	picture = GFX_evt_diplomat_hf

	is_triggered_only = yes

	trigger = {
	}

	hide_window = yes

	immediate = {
		if = {
			limit = {
				any_character = {
					tsk_location_high_kingdom_claimed_is_region_ruler_trigger = yes
					has_flag = is_claimant_opposer
				}
			}
			random_character = {
				limit = {
					has_flag = is_claimant_opposer
					has_flag = is_opposer
					tsk_location_high_kingdom_claimed_is_region_ruler_trigger = yes
				}
				save_event_target_as = leading_opposer
				set_flag = leading_opposer_claimant
				character_event = { id = tsk_high_kingdom.4 }
			}
		}
		else_if = {
			limit = {
				any_character = {
					tsk_location_high_kingdom_claimed_is_region_ruler_trigger = yes
					NOT = { has_flag = is_claimant_opposer }
					has_flag = is_opposer
				}
			}
			random_character = {
				limit = {
					NOT = { has_flag = is_claimant_opposer }
					has_flag = is_opposer
					tsk_location_high_kingdom_claimed_is_region_ruler_trigger = yes
				}
				save_event_target_as = leading_opposer
				set_flag = leading_opposer_dismantle
			}
		}
		character_event = { id = tsk_high_kingdom.6 }
	}
	
	option = { }
}

#	Ping event | event 2 to 3 to 4
character_event = {
	id = tsk_high_kingdom.3

	is_triggered_only = yes

	hide_window = yes

	trigger = {
	}

	immediate = {
		any_playable_ruler = {
			limit = {
				has_flag = is_opposer
				NOT = { character = ROOT }
				tsk_location_high_kingdom_claimed_is_region_ruler_trigger = yes
			}
			character_event = { id = tsk_high_kingdom.4 }
		}
	}
	
	option = { }
}

#	Other opposer are ask to support claimant_opposers claim
character_event = {
	id = tsk_high_kingdom.4
	desc = EVTDESCTSK_HIGH_KINGDOM4
	picture = GFX_evt_china_diplomatic_incident

	is_triggered_only = yes

	trigger = {
		#FROM = { has_flag = leading_opposer }
	}

	immediate = {
		
	}
	
	option = { #
		name = EVTOPTATSK_HIGH_KINGDOM4
		
		set_flag = accepts_FROM_as_liege
		set_flag = supported_claim_on_high_kingdom
		FROM = { character_event = { id = tsk_high_kingdom.5 } }
	}
	
	option = { #
		name = EVTOPTBTSK_HIGH_KINGDOM12
		
		FROM = { character_event = { id = tsk_high_kingdom.5 } }
	}
}

#	CLaimant_opposer is notified about other kings' decision
letter_event = {
	id = tsk_high_kingdom.5
	desc = {
		trigger = { FROM = { NOT = { has_flag = accepts_FROM_as_liege } } }
		text = EVTDESCATSK_HIGH_KINGDOM5
	}
	desc = {
		trigger = { FROM = { has_flag = accepts_FROM_as_liege } }
		text = EVTDESCBTSK_HIGH_KINGDOM5
	}

	is_triggered_only = yes
	
	option = { #
		name = EVTOPTATSK_HIGH_KINGDOM5
		trigger = {
			FROM = { NOT = { has_flag = accepts_FROM_as_liege } }
		}
	}
	
	option = { #
		name = EVTOPTBTSK_HIGH_KINGDOM5
		trigger = {
			FROM = { has_flag = accepts_FROM_as_liege }
		}
	}
}

#	Displays neutral, opposing, allied kings
character_event = {
	id = tsk_high_kingdom.6
	desc = EVTDESCTSK_HIGH_KINGDOM6
	picture = GFX_courier_riding_horse

	is_triggered_only = yes
	
	#hide_window = yes

	immediate = {
	}
	
	option = { #
		name = EVTOPTATSK_HIGH_KINGDOM6
		
		any_character = {
			limit = {
				has_flag = is_supporter
			}
			custom_tooltip = {
				text = TSKHIGHKINGDOMEVT6CUSTOM
			}
		}
		if = {
			limit = {
				any_character = {
					tsk_location_high_kingdom_claimed_is_region_ruler_trigger = yes
					has_flag = leading_opposer_claimant
				}
			}
			set_flag = fights_claim_war
			reverse_unsafe_war = {
				target = event_target:leading_opposer
				casus_belli = claim
				thirdparty_title = ROOT
				tier = EMPEROR
			}
			any_playable_ruler = {
				limit = {
					has_flag = is_opposer
					NOT = { has_flag = leading_opposer }
					tsk_location_high_kingdom_claimed_is_region_ruler_trigger = yes
				}
				join_attacker_wars = event_target:leading_opposer
			}
		}
		else_if = {
			limit = {
				any_character = {
					tsk_location_high_kingdom_claimed_is_region_ruler_trigger = yes
					has_flag = leading_opposer_dismantle
				}
			}
			set_flag = fights_dismantle_war
			reverse_unsafe_war = {
				target = event_target:leading_opposer
				casus_belli = tsk_dismantle_high_kingdom_cb
				thirdparty_title = ROOT
				tier = EMPEROR
			}
			any_playable_ruler = {
				limit = {
					has_flag = is_opposer
					NOT = { has_flag = leading_opposer }
					tsk_location_high_kingdom_claimed_is_region_ruler_trigger = yes
				}
				join_attacker_wars = event_target:leading_opposer
			}
		}
	}
}

#	Dismantle war over - High King won
character_event = {
	id = tsk_high_kingdom.7
	desc = EVTDESCTSK_HIGH_KINGDOM7
	picture = GFX_evt_diplomatic_greeting

	is_triggered_only = yes

	trigger = {
		ROOT = {
			has_flag = claims_high_kingdom
			has_flag = fights_dismantle_war
		}
		FROM = {
			has_flag = leading_opposer
		}
	}

	major = yes
	major_trigger = {
		capital_scope = { region = world_westeros_north_south }
	}

	immediate = {
		ROOT = { set_flag = won_war }
		FROM = { set_flag = lost_war }
		any_independent_ruler = {
			limit = { has_flag = is_opposer_of_@ROOT }
			set_flag = lost_war
		}
		character_event = { id = tsk_high_kingdom.12 days = 1 }
	}
	
	option = { # Great!
		name = "Great!"
		trigger = {
			has_flag = won_war
			has_flag = high_king_is_@ROOT
		}
		
		if = {
			limit = { has_flag = claims_high_kingdom }
			custom_tooltip = {
				text = TSKHIGHKINGDOMEVT7CUSTOM
				any_independent_ruler = {
					limit = {
						OR = {
							has_flag = is_supporter_of_@ROOT
							has_flag = is_opposer_of_@ROOT
						}
					}
					set_defacto_liege = ROOT
				}
			}
		}
	}
	
	option = { # Next time...
		name = "Next time..."
		trigger = {
			has_flag = lost_war
			has_flag = high_king_is_@ROOT
		}
	}
	
	option = { # Ok.
		name = "Ok."
		trigger = {
			NOT = { has_flag = high_king_is_@ROOT }
		}
	}
}

#	Dismantle war over - High King lost
character_event = {
	id = tsk_high_kingdom.8
	desc = EVTDESCTSK_HIGH_KINGDOM8
	picture = GFX_evt_diplomatic_greeting

	is_triggered_only = yes

	trigger = {
		FROM = {
			has_flag = claims_high_kingdom
			has_flag = fights_dismantle_war
		}
		ROOT = {
			has_flag = leading_opposer
		}
	}
	
	major = yes
	major_trigger = {
		capital_scope = { region = world_westeros_north_south }
	}

	immediate = {
		ROOT = { set_flag = lost_war }
		FROM = { set_flag = won_war }
		any_independent_ruler = {
			limit = { has_flag = is_opposer_of_@ROOT }
			set_flag = won_war
		}
		character_event = { id = tsk_high_kingdom.12 days = 1 }
	}
	
	option = { # Great!
		name = "Great!"
		trigger = {
			has_flag = won_war
			has_flag = high_king_is_@ROOT
		}
	}
	
	option = { # Next time...
		name = "Next time..."
		trigger = {
			has_flag = lost_war
			has_flag = high_king_is_@ROOT
		}
	}
	
	option = { # Ok.
		name = "Ok."
		trigger = {
			NOT = { has_flag = high_king_is_@ROOT }
		}
	}
	
	after = {
		if = {
			limit = { has_flag = claims_high_kingdom }
			ROOT = {
				character_event = { id = tsk_high_kingdom.11 days = 2 }
				any_realm_lord = {
					character_event = { id = tsk_high_kingdom.11 }
				}
				if = {
					limit = { has_flag = claims_beyond_the_wall }
					destroy_landed_title = e_beyond_the_wall
				}
				if = {
					limit = { has_flag = claims_dorne }
					destroy_landed_title = e_dorne
				}
				if = {
					limit = { has_flag = claims_blackwater }
					destroy_landed_title = e_the_dusklands
				}
				if = {
					limit = { has_flag = claims_iron_islands }
					destroy_landed_title = e_the_iron_islands
				}
				if = {
					limit = { has_flag = claims_north }
					destroy_landed_title = e_the_north
				}
				if = {
					limit = { has_flag = claims_reach }
					destroy_landed_title = e_the_reach
				}
				if = {
					limit = { has_flag = claims_riverlands }
					destroy_landed_title = e_the_riverlands
				}
				if = {
					limit = { has_flag = claims_stormlands }
					destroy_landed_title = e_the_stormlands
				}
				if = {
					limit = { has_flag = claims_vale }
					destroy_landed_title = e_the_vale
				}
				if = {
					limit = { has_flag = claims_westerlands }
					destroy_landed_title = e_the_westerlands
				}
			}
		}
	}
}

#	Claim war over - High King won
character_event = {
	id = tsk_high_kingdom.9
	desc = EVTDESCTSK_HIGH_KINGDOM9
	picture = GFX_evt_diplomatic_greeting

	is_triggered_only = yes

	trigger = {
		FROM = {
			has_flag = claims_high_kingdom
			has_flag = fights_claim_war
		}
		ROOT = {
			has_flag = leading_opposer
		}
	}
	
	major = yes
	major_trigger = {
		capital_scope = { region = world_westeros_north_south }
	}

	immediate = {
		ROOT = { set_flag = won_war }
		FROM = { set_flag = lost_war }
		any_independent_ruler = {
			limit = { has_flag = is_opposer_of_@ROOT }
			set_flag = lost_war
		}
		ROOT = { character_event = { id = tsk_high_kingdom.0 days = 1 } }
		character_event = { id = tsk_high_kingdom.12 days = 1 }
	}
	
	option = { # Great!
		name = "Great!"
		trigger = {
			has_flag = won_war
			ROOT = {
				THIS = { has_flag = high_king_is_@PREV }
			}
		}
		custom_tooltip = {
			text = TSKHIGHKINGDOMEVT7CUSTOM
			if = {
				limit = { has_flag = claims_high_kingdom }
				any_independent_ruler = {
					limit = {
						OR = {
							has_flag = is_supporter_of_@ROOT
							has_flag = is_opposer_of_@ROOT
						}
					}
					set_defacto_liege = ROOT
				}
			}
		}
	}
	
	option = { # Next time...
		name = "Next time..."
		trigger = {
			has_flag = lost_war
			ROOT = {
				THIS = { has_flag = high_king_is_@PREV }
			}
		}
	}
	
	option = { # Ok.
		name = "Ok."
		trigger = {
			ROOT = {
				THIS = { NOT = { has_flag = high_king_is_@PREV } }
			}
		}
	}
}

#	Claim war over - High King lost
character_event = {
	id = tsk_high_kingdom.10
	desc = EVTDESCTSK_HIGH_KINGDOM10
	picture = GFX_evt_diplomatic_greeting

	is_triggered_only = yes

	trigger = {
		ROOT = {
			has_flag = claims_high_kingdom
			has_flag = fights_claim_war
		}
		FROM = {
			has_flag = leading_opposer
		}
	}
	
	major = yes
	major_trigger = {
		capital_scope = { region = world_westeros_north_south }
	}

	immediate = {
		ROOT = { set_flag = lost_war }
		FROM = { set_flag = won_war }
		any_independent_ruler = {
			limit = { has_flag = is_opposer_of_@ROOT }
			set_flag = won_war
		}
		FROM = { character_event = { id = tsk_high_kingdom.0 days = 1 } }
		character_event = { id = tsk_high_kingdom.12 days = 1 }
	}
	
	option = { # Great!
		name = "Great!"
		trigger = {
			has_flag = won_war
			ROOT = {
				THIS = { has_flag = high_king_is_@PREV }
			}
		}
		
		custom_tooltip = {
			text = TSKHIGHKINGDOMEVT7CUSTOM
			if = {
				limit = { has_flag = leading_opposer }
				any_independent_ruler = {
					limit = {
						OR = {
							has_flag = is_supporter_of_@ROOT
							has_flag = is_opposer_of_@ROOT
						}
					}
					set_defacto_liege = FROM
				}
			}
		}
	}
	
	option = { # Next time...
		name = "Next time..."
		trigger = {
			has_flag = lost_war
			ROOT = {
				THIS = { has_flag = high_king_is_@PREV }
			}
		}
	}
	
	option = { # Ok.
		name = "Ok."
		trigger = {
			ROOT = {
				THIS = { NOT = { has_flag = high_king_is_@PREV } }
			}
		}
	}
}

# Restores status quo if High King lost
character_event = {
	id = tsk_high_kingdom.11

	is_triggered_only = yes

	hide_window = yes
	
	immediate = {
		any_title = {
			limit = {
				has_flag = former_holder_@ROOT
				ROOT = { has_flag = former_holder_of_@PREV }
			}
			gain_title = ROOT
			clr_flag = former_holder_@ROOT
			ROOT = { clr_flag = former_holder_of_@PREV }
		}
		any_playable_ruler = {
			limit = {
				has_flag = old_liege_is_@PREV
				ROOT = { has_flag = old_vassal_is_@PREV }
			}
			set_defacto_liege = PREV
			clr_flag = old_liege_is_@PREV
			ROOT = { clr_flag = old_vassal_is_@PREV }
		}
	}
}

#	Clear flags
character_event = {
	id = tsk_high_kingdom.12

	is_triggered_only = yes

	hide_window = yes
	
	immediate = {
		any_playable_ruler = {
			limit = {
				has_flag = high_king_is_@ROOT
			}
			clear_high_kingdom_creation_flags = yes
		}
		clear_high_kingdom_creation_flags = yes
	}
}

#	Give necessary flags for heirs
character_event = {
	id = tsk_high_kingdom.13

	is_triggered_only = yes

	hide_window = yes
	
	immediate = {
		if = {
			limit = { has_flag = high_kingdom_blackwater }
			current_heir = { set_flag = high_kingdom_blackwater }
		}
		if = {
			limit = { has_flag = high_kingdom_dorne }
			current_heir = { set_flag = high_kingdom_dorne }
		}
		if = {
			limit = { has_flag = high_kingdom_iron_islands }
			current_heir = { set_flag = high_kingdom_iron_islands }
		}
		if = {
			limit = { has_flag = high_kingdom_north }
			current_heir = { set_flag = high_kingdom_north }
		}
		if = {
			limit = { has_flag = high_kingdom_reach }
			current_heir = { set_flag = high_kingdom_reach }
		}
		if = {
			limit = { has_flag = high_kingdom_riverlands }
			current_heir = { set_flag = high_kingdom_riverlands }
		}
		if = {
			limit = { has_flag = high_kingdom_stormlands }
			current_heir = { set_flag = high_kingdom_stormlands }
		}
		if = {
			limit = { has_flag = high_kingdom_vale }
			current_heir = { set_flag = high_kingdom_vale }
		}
		if = {
			limit = { has_flag = high_kingdom_westerlands }
			current_heir = { set_flag = high_kingdom_westerlands }
		}
		if = {
			limit = { has_flag = is_opposer }
			current_heir = { set_flag = is_opposer }
		}
		if = {
			limit = { has_flag = is_supporter }
			current_heir = { set_flag = is_supporter }
		}
		if = {
			limit = { has_flag = is_claimant_opposer }
			current_heir = { set_flag = is_claimant_opposer }
		}
		if = {
			limit = { has_flag = accepts_FROM_as_liege }
			current_heir = { set_flag = accepts_FROM_as_liege }
		}
		if = {
			limit = { has_flag = supported_claim_on_high_kingdom }
			current_heir = { set_flag = supported_claim_on_high_kingdom }
		}
		if = {
			limit = { has_flag = leading_opposer_claimant }
			current_heir = { set_flag = leading_opposer_claimant }
		}
		if = {
			limit = { has_flag = leading_opposer_dismantle }
			current_heir = { set_flag = leading_opposer_dismantle }
		}
	}
	
	option = { }
}