#scipt taken from adventurer_negotiations and adjusted for TSK by TitanRogue

namespace = tsk_andal_mig

character_event = {
	id = tsk_andal_mig.0
	desc = EVTDESC_tsk_andal_mig_0
	picture = GFX_evt_andals
	border = GFX_event_normal_frame_religion
	culture_group = first_men
	
	trigger = {
		NOT = { has_global_flag = andal_invasion_ended }
		higher_tier_than = COUNT
		NOT = { has_global_flag = andal_invasion_is_over }
		any_neighbor_independent_ruler = {
			any_realm_province = { culture_group = andal }
		}
	}
	
	mean_time_to_happen = {
		years = 35
		modifier = {
			factor = 1.9
			capital_scope = { region = world_the_north }
		}
	}
	
	immediate = {
		save_event_target_as = adventurer_decision_taker_override
		random_list = {
			1 = {
				create_character = {
					random_traits = yes
					dynasty = actually_culture
					culture = andal
					religion = the_seven
					female = no
					age = 43
					historical = yes
				}
			}
			1 = {
				create_character = {
					random_traits = yes
					dynasty = actually_culture
					culture = andal
					religion = the_seven
					female = no
					age = 42
					historical = yes
				}
			}
			1 = {
				create_character = {
					random_traits = yes
					dynasty = actually_culture
					culture = andal
					religion = the_seven
					female = no
					age = 40
					historical = yes
				}
			}
			1 = {
				create_character = {
					random_traits = yes
					dynasty = actually_culture
					culture = andal
					religion = the_seven
					female = no
					age = 38
					historical = yes
				}
			}
			1 = {
				create_character = {
					random_traits = yes
					dynasty = actually_culture
					culture = andal
					religion = the_seven
					female = no
					age = 35
					historical = yes
				}
			}
			1 = {
				create_character = {
					random_traits = yes
					dynasty = actually_culture
					culture = andal
					religion = the_seven
					female = no
					age = 32
					historical = yes
				}
			}
			1 = {
				create_character = {
					random_traits = yes
					dynasty = actually_culture
					culture = andal
					religion = the_seven
					female = no
					age = 29
					historical = yes
				}
			}
			1 = {
				create_character = {
					random_traits = yes
					dynasty = actually_culture
					culture = andal
					religion = the_seven
					female = no
					age = 26
					historical = yes
				}
			}
			1 = {
				create_character = {
					random_traits = yes
					dynasty = actually_culture
					culture = andal
					religion = the_seven
					female = no
					age = 23
					historical = yes
				}
			}
			1 = {
				create_character = {
					random_traits = yes
					dynasty = actually_culture
					culture = andal
					religion = the_seven
					female = no
					age = 21
					historical = yes
				}
			}
		}
		new_character = {
			save_event_target_as = adventurer_decision_target_override
			random_list = {
				5 = { wealth = 1000 }
				10 = { wealth = 800 }
				10 = { wealth = 700 }
				20 = { wealth = 600 }
				30 = { wealth = 400 }
				20 = { wealth = 300 }
				5 = { wealth = 200 }
			}
			random_list = {
				5 = { prestige = 1000 }
				5 = { prestige = 800 }
				15 = { prestige = 700 }
				20 = { prestige = 600 }
				30 = { prestige = 400 }
				20 = { prestige = 300 }
				5 = { prestige = 200 }
			}
		}
	}
	
	option = {
		name = EVTOPTA_tsk_andal_mig_0 #
		character_event = { id = tsk_andal_mig.1 days = 2 }
	}
	
	option = {
		name = EVTOPTB_tsk_andal_mig_0 #
	}
}

character_event = {
    id = tsk_andal_mig.1
	picture = GFX_evt_andals

    is_triggered_only = yes
    hide_window = yes

    option = {
    	event_target:adventurer_decision_target_override = { save_event_target_as = raiding_adventurer }
		if = {
			limit = {
				event_target:adventurer_decision_target_override = {
					is_alive = yes
				}
			}
			event_target:adventurer_decision_target_override = {
				save_event_target_as = raiding_adventurer
			}
		}
    	save_event_target_as = adventurer_target
		if = {
			limit = {
				event_target:adventurer_decision_taker_override = {
					is_alive = yes
				}
			}
			event_target:adventurer_decision_taker_override = {
				save_event_target_as = adventurer_target
			}
		}

    	#Stores how much money adventurer has
    	event_target:raiding_adventurer = { export_to_variable = { which = adventurer_treasury value = treasury } }

    	#Picks out a province to sell 
    	random_demesne_province = {
    		limit = {
    			is_capital = no 
    			num_of_settlements = 1
				NOT = {
					has_province_modifier = nomad_agitation
				}
    		}
			preferred_limit = {
				event_target:raiding_adventurer = {
					OR = {
						religion_group = drowned_god_group
						has_religion_feature = religion_seafaring
						is_seafarer = yes
					}
				}
				port = yes
			}

    		set_variable = { which = price value = 100 }

    		trigger_switch = {
    			on_trigger = num_of_settlements
    			7 = { change_variable = { which = price value = 700 } }
    			6 = { change_variable = { which = price value = 600 } }
    			5 = { change_variable = { which = price value = 500 } }
    			4 = { change_variable = { which = price value = 400 } }
    			3 = { change_variable = { which = price value = 300 } }
    			2 = { change_variable = { which = price value = 200 } }
    			1 = { change_variable = { which = price value = 100 } }
    		}

    		trigger_switch = {
    			on_trigger = num_of_empty_holdings
    			6 = { change_variable = { which = price value = 150 } }
    			5 = { change_variable = { which = price value = 125 } }
    			4 = { change_variable = { which = price value = 100 } }
    			3 = { change_variable = { which = price value = 75 } }
    			2 = { change_variable = { which = price value = 50 } }
    			1 = { change_variable = { which = price value = 25 } }
    		}

    		set_variable = { which = haggle_price which = price }
    		multiply_variable = { which = haggle_price value = 0.7 }


    		#Checks that the adventurer has enough money to haggle
    		if = {
    			limit = {
					OR = {
						event_target:adventurer_target = {
							has_character_flag = peaceful_negotiation
						}
						event_target:raiding_adventurer = { check_variable = { which = adventurer_treasury which = haggle_price which = PREV } }
					}
				}
    			save_event_target_as = selling_province
    		}
    	}

   		#If they can't afford your province, pick a vassal province (also a big chance to happen even if they can afford it)
    	random_list = {
    		80 = {
    			random_vassal = {
	    			limit = {
	    				any_demesne_province = {
			    			is_capital = no 
			    			num_of_settlements = 1
							NOT = {
								has_province_modifier = nomad_agitation
							}
	    				}
	    			}
					preferred_limit = {
						event_target:raiding_adventurer = {
							OR = {
								religion_group = drowned_god_group
								has_religion_feature = religion_seafaring
								is_seafarer = yes
							}
						}
						any_demesne_province = {
							is_capital = no 
			    			num_of_settlements = 1
							NOT = {
								has_province_modifier = nomad_agitation
							}
							port = yes
						}
					}
	    			random_demesne_province = {
	    				limit = {
			    			is_capital = no 
			    			num_of_settlements = 1
							NOT = {
								has_province_modifier = nomad_agitation
							}
			    		}
						preferred_limit = {
							event_target:raiding_adventurer = {
								OR = {
									religion_group = drowned_god_group
									has_religion_feature = religion_seafaring
									is_seafarer = yes
								}
							}
							is_capital = no 
			    			num_of_settlements = 1
							NOT = {
								has_province_modifier = nomad_agitation
							}
							port = yes
						}

			    		set_variable = { which = price value = 100 }

			    		trigger_switch = {
			    			on_trigger = num_of_settlements
			    			7 = { change_variable = { which = price value = 400 } }
			    			6 = { change_variable = { which = price value = 350 } }
			    			5 = { change_variable = { which = price value = 300 } }
			    			4 = { change_variable = { which = price value = 250 } }
			    			3 = { change_variable = { which = price value = 200 } }
			    			2 = { change_variable = { which = price value = 150 } }
			    			1 = { change_variable = { which = price value = 100 } }
			    		}

			    		trigger_switch = {
			    			on_trigger = num_of_empty_holdings
			    			6 = { change_variable = { which = price value = 60 } }
			    			5 = { change_variable = { which = price value = 50 } }
			    			4 = { change_variable = { which = price value = 40 } }
			    			3 = { change_variable = { which = price value = 30 } }
			    			2 = { change_variable = { which = price value = 20 } }
			    			1 = { change_variable = { which = price value = 10 } }
			    		}

			    		set_variable = { which = haggle_price which = price }
	    				multiply_variable = { which = haggle_price value = 0.7 }

	    				save_event_target_as = selling_province
	    			}
	    		}
    		}
    		20 = {
    			trigger = {
					event_target:selling_province = { always = yes }
				}
    			#Empty, your demesne province is kept as selling_province
    		}
    	}
		
		event_target:adventurer_target = {
			if = {
				limit = {
					is_married = no
				}
				if = {
					limit = { is_female = no }
					create_character = {
						culture = andal
						religion = the_seven
						random_traits = yes
						dynasty = actually_culture
						female = yes
						age = 20
						attributes = {
							martial = 6
							diplomacy = 8
							stewardship = 9
							intrigue = 12
							learning = 12
						}
					}
				}
				else = {
					create_character = {
						culture = andal
						religion = the_seven
						random_traits = yes
						dynasty = actually_culture
						female = no
						age = 20
						attributes = {
							martial = 6
							diplomacy = 8
							stewardship = 9
							intrigue = 12
							learning = 12
						}
					}
				}
				new_character = { save_event_target_as = marriage_child }
				event_target:adventurer_target = { set_flag = target_will_marry }
			}
			else_if = {
				limit = {
					has_children = yes
				}
				random_child = {
					limit = {
						OR = {
							AND = {
								event_target:raiding_adventurer = { is_female = yes }
								is_female = no
							}
							AND = {
								event_target:raiding_adventurer = { is_female = no }
								is_female = yes
							}
						}
						is_adult = yes
						is_alive = yes
						is_married = no
						can_marry = yes
						NOT = { is_primary_heir = ROOT }
						is_ruler = no
						character_disease_trigger = no
						has_disability_trigger = no
						OR = {
							stewardship = 5
							martial = 5
							diplomacy = 5
							intrigue = 5
							learning = 5
						}
					}
					preferred_limit = {
						NOR = {
							is_dumb_trigger = yes
							has_mental_disorder_trigger = yes
							trait = homosexual
							trait = celibate
							has_ugly_trait_trigger = yes
						}
						OR = {
							is_smart_trigger = yes
							has_attractive_trait_trigger = yes
							has_pleasant_personality_trigger = yes
							stewardship = 13
							martial = 13
							diplomacy = 13
							intrigue = 13
							learning = 15
						}
					}
					preferred_limit = {
						NOR = {
							is_dumb_trigger = yes
							has_mental_disorder_trigger = yes
							trait = homosexual
							trait = celibate
							has_ugly_trait_trigger = yes
						}
					}
					preferred_limit = {
						NOR = {
							is_dumb_trigger = yes
							has_mental_disorder_trigger = yes
							has_ugly_trait_trigger = yes
						}
					}
					preferred_limit = {
						NOT = {
							has_ugly_trait_trigger = yes
						}
					}
					save_event_target_as = marriage_child
				}
			}
		}

    	#If a suitable deal can be made, fire the negotiation
    	if = {
    		limit = {
    			OR = {
    				event_target:selling_province = { always = yes }
    				event_target:marriage_child = { always = yes }
    			}
    		}
    		event_target:raiding_adventurer = { character_event = { id = tsk_andal_mig.2 } }
    		break = yes
    	}

    	#Adventurer declares war
    	raiding_adventurer_war_declaration_effect = yes

        #Logging for displaced prince...
        if = {
            limit = { event_target:raiding_adventurer = { has_character_flag = is_displaced_prince } }
            log = "Displaced royal: [raiding_adventurer.GetBestName] declared war over the province [selling_province.GetName], currently held by [Root.GetBestName]."
        }
    }
}

#Ping event
character_event = {
    id = tsk_andal_mig.2
	picture = GFX_evt_andals
    hide_window = yes
    is_triggered_only = yes
    option = { FROM = { letter_event = { id = tsk_andal_mig.3 } } }
}

#Negotiation start
letter_event = {
    id = tsk_andal_mig.3
	picture = GFX_evt_andals
    border = GFX_event_letter_frame_war

    desc = {
    	trigger = {
    		event_target:selling_province = { always = yes }
    		event_target:marriage_child = { always = yes }
			NOT = { has_flag = target_will_marry }
    	}
    	text = EVTDESC_tsk_andal_mig_3_A
    }
    desc = {
    	trigger = {
    		event_target:selling_province = { always = yes }
    		NOT = { event_target:marriage_child = { always = yes } }
    	}
    	text = EVTDESC_tsk_andal_mig_3_B
    }
    desc = {
    	trigger = {
    		event_target:selling_province = { always = yes }
    		event_target:marriage_child = { always = yes }
			has_flag = target_will_marry
    	}
    	text = EVTDESC_tsk_andal_mig_3_C
    }

    is_triggered_only = yes

  
    #Sell your province + (no) marriage
    option = {
    	trigger = {
    		event_target:selling_province = { 
    			always = yes 
    			owner = { character = ROOT }
    		}
    	}
        name = {
			text = EVTOPTA_tsk_andal_mig_3_A
			trigger = {
				event_target:selling_province = { 
					always = yes 
					owner = { character = ROOT }
				}
				event_target:marriage_child = { always = yes }
			}
		}
        name = {
			text = EVTOPTA_tsk_andal_mig_3_B
			trigger = {
				event_target:selling_province = { 
					always = yes 
					owner = { character = ROOT }
				}
				NOT = { event_target:marriage_child = { always = yes } }
			}
		}
		
        custom_tooltip = { text = EVTOPTA_tsk_andal_mig_3_TT }

        hidden_effect = {
        	event_target:raiding_adventurer = { character_event = { id = tsk_andal_mig.4 days = 5 } }
        }

        ai_chance = {
        	factor = 20
        	modifier = { trait = craven factor = 2 }
        	modifier = { trait = greedy factor = 1.3 }
        	modifier = { event_target:raiding_adventurer = { realm_levy_diff = { who = ROOT value = 1500 } } factor = 1.3 }
        	modifier = { event_target:raiding_adventurer = { realm_levy_diff = { who = ROOT value = 3000 } } factor = 1.5 }
        	modifier = { event_target:raiding_adventurer = { realm_levy_diff = { who = ROOT value = 5000 } } factor = 1.5 }
        }
    }

    #Sell vassal province + (no) marriage
    option = {
    	trigger = { 
    		event_target:selling_province = { 
    			always = yes 
    			NOT = { owner = { character = ROOT } }
    		} 
    	}
        name = {
			text = EVTOPTA_tsk_andal_mig_3_A
			trigger = {
				event_target:selling_province = { always = yes }
				event_target:marriage_child = { always = yes }
				NOT = { has_flag = target_will_marry }
			}
		}
        name = {
			text = EVTOPTA_tsk_andal_mig_3_B
			trigger = {
				event_target:selling_province = { always = yes  }
				NOT = { event_target:marriage_child = { always = yes } }
			}
		}
        name = {
			text = EVTOPTA_tsk_andal_mig_3_C
			trigger = {
				event_target:selling_province = { always = yes  }
				event_target:marriage_child = { always = yes }
				has_flag = target_will_marry
			}
		}
		
        custom_tooltip = { text = EVTOPTB_tsk_andal_mig_3_TT }

        tooltip = {
        	prestige = -50
        	event_target:selling_province = {
        		owner = {
        			opinion = {
        				who = ROOT
        				modifier = sold_my_province
        				years = 100
        			}
        		}
        	}
        	if = {
        		limit = { any_vassal = { NOT = { any_demesne_province = { province = event_target:selling_province } } } }
        		custom_tooltip = { text = EVTOPTA_tsk_andal_mig_3_tooltip }
        	}
        	hidden_effect = {
	        	any_vassal = {
	        		limit = { NOT = { any_demesne_province = { province = event_target:selling_province } } }
	        		opinion = {
	        			who = ROOT
	    				modifier = sold_vassal_province
	    				years = 5
	    			}
	        	}
        	}
        }

        hidden_effect = {
        	event_target:raiding_adventurer = { character_event = { id = tsk_andal_mig.4 days = 5 } }
        }

		hidden_effect = {
			clr_character_flag = adventurer_unsafe_duchy_war
			clr_character_flag = adventurer_safe_duchy_war
			clr_character_flag = negotiating_with_adventurer
			set_looter_hostility_days = {
				who = event_target:raiding_adventurer
				days = 0
			}
			event_target:raiding_adventurer = {
				set_looter_hostility_days = {
					who = ROOT
					days = 0
				}
			}
		}
		
		log = "Raiding adventurer [raiding_adventurer.GetBestName]([raiding_adventurer.GetID]) got married to [marriage_child.GetBestName]([marriage_child.GetID]) after negotiations"

		#Logging for displaced prince...
		if = {
			limit = { event_target:raiding_adventurer = { has_character_flag = is_displaced_prince } }
			log = "Displaced royal: [raiding_adventurer.GetBestName] ([raiding_adventurer.GetID]) got married to [marriage_child.GetBestName]([marriage_child.GetID]) after negotiations"
		}

        ai_chance = {
        	factor = 80
        	modifier = { trait = craven factor = 2 }
        	modifier = { trait = greedy factor = 2 }
        	modifier = { event_target:raiding_adventurer = { realm_levy_diff = { who = ROOT value = 1500 } } factor = 1.3 }
        	modifier = { event_target:raiding_adventurer = { realm_levy_diff = { who = ROOT value = 3000 } } factor = 1.5 }
        	modifier = { event_target:raiding_adventurer = { realm_levy_diff = { who = ROOT value = 5000 } } factor = 1.5 }
        	modifier = { is_rival = event_target:marriage_child factor = 2 }
        	modifier = { is_friend = event_target:marriage_child factor = 0.5 }
        	modifier = { num_of_children = 5 factor = 1.3 }
        }
    }
    
    #No deal
    option = {
        name = EVTOPTD_tsk_andal_mig_3
        custom_tooltip = { text = EVTOPTD_tsk_andal_mig_3_TT }
		
		trigger = {
			event_target:adventurer_target = {
				NOT = {
					has_character_flag = peaceful_negotiation
				}
			}
		}
	
		#Create landless title for war
		create_title = {
			tier = DUKE
			landless = yes
			temporary = yes
			adventurer = yes
			culture = event_target:raiding_adventurer
			name = "CLAIMANT_ADVENTURE"
			holder = event_target:raiding_adventurer
		}
		
		hidden_tooltip = {
			spawn_unit = {
				province = event_target:selling_province
				home = event_target:selling_province
				owner = event_target:raiding_adventurer
				troops = {
					heavy_infantry = { 800 800 }
					light_infantry = { 1500 1500 }
					archers = { 500 500 }
					light_cavalry = { 200 200 }
				}
				match_character = ROOT
				match_mult = 0.75
				maintenance_multiplier = 0.3
			}
		}

        #Adventurer declares war
    	raiding_adventurer_war_declaration_effect = yes

        #Logging for displaced prince...
        if = {
            limit = { event_target:raiding_adventurer = { has_character_flag = is_displaced_prince } }
            log = "Displaced royal: [raiding_adventurer.GetBestName] had their negotiation turned down, and instead declared war over the province [selling_province.GetName], currently held by [Root.GetBestName]."
        }

    	ai_chance = {
        	factor = 20
        	modifier = { realm_levy_diff = { who = event_target:raiding_adventurer value = 1000 } factor = 1.3 }
        	modifier = { realm_levy_diff = { who = event_target:raiding_adventurer value = 2500 } factor = 1.3 }
        	modifier = { trait = brave factor = 2 }
        	modifier = { trait = wroth factor = 1.5 }
        	modifier = { trait = ambitious factor = 1.5 }
        }
    }
	
	#No deal - peaceful
    option = {
        name = EVTOPTE_tsk_andal_mig_3
        custom_tooltip = { text = EVTOPTE_tsk_andal_mig_3_TT }
		
		trigger = {
			event_target:adventurer_target = {
				has_character_flag = peaceful_negotiation
			}
		}
		
		clr_character_flag = peaceful_negotiation

        #Logging for displaced prince...
        if = {
            limit = { event_target:raiding_adventurer = { has_character_flag = is_displaced_prince } }
            log = "Displaced royal: [raiding_adventurer.GetBestName] had their negotiation turned down, no war was declared as the event was fired via a player-only decision"
        }

    	ai_chance = {
        	factor = 20
        	modifier = { realm_levy_diff = { who = event_target:raiding_adventurer value = 1000 } factor = 1.3 }
        	modifier = { realm_levy_diff = { who = event_target:raiding_adventurer value = 2500 } factor = 1.3 }
        	modifier = { trait = brave factor = 2 }
        	modifier = { trait = wroth factor = 1.5 }
        	modifier = { trait = ambitious factor = 1.5 }
        }
    }
}


#Raiding adventurer evaluates 
character_event = {
    id = tsk_andal_mig.4
    hide_window = yes
    is_triggered_only = yes
	picture = GFX_evt_andals
	
    option = { 
    	#If they can afford the price, see if they haggle or not
    	export_to_variable = { which = adventurer_treasury value = treasury }
    	subtract_variable = { which = adventurer_treasury which = price which = event_target:selling_province }
		
		if = {
			limit = {
				NOT = { check_variable = { which = adventurer_treasury value = 0 } }
			}
			log = "Adventurer [This.GetBestName]([This.GetID]) is forced to haggle since [This.GetSheHe] can't afford the province."
		}
			
		random_list = {
			50 = { #Deal
				#trigger = { check_variable = { which = adventurer_treasury value = 0 } }
				modifier = { NOT = { stewardship = 8 } factor = 2 }
				modifier = { age = 50 factor = 2 }
				modifier = { trait = craven factor = 2 }
				modifier = { trait = content factor = 2 }
				modifier = { trait = charitable factor = 2 }
				modifier = { trait = just factor = 2 }
				event_target:adventurer_target = { character_event = { id = tsk_andal_mig.5 } }
				break = yes
			}
			50 = { #Haggle
				trigger = { always = no }
				modifier = { stewardship = 14 factor = 2 }
				modifier = { trait = greedy factor = 2 }
				modifier = { trait = ambitious factor = 2 }
				modifier = { trait = arbitrary factor = 2 }

				export_to_variable = { which = adventurer_treasury value = treasury }
				subtract_variable = { which = adventurer_treasury which = haggle_price which = event_target:selling_province }

				if = {
					limit = { check_variable = { which = adventurer_treasury value = 0 } }
					set_variable = { which = province_offer value = 0 }
					change_variable = { which = province_offer which = haggle_price which = event_target:selling_province }
					set_character_flag = haggle_price
				}

                if = {
                    limit = {
						NOT = { check_variable = { which = adventurer_treasury value = 0 } }
						NOT = {
							wealth = 100
						}
					}
                    set_character_flag = no_haggling
					log = "[This.GetBestName]([This.GetID]) can't even afford the reduced haggle price."
                }
				
				if = {
                    limit = {
						NOT = { check_variable = { which = adventurer_treasury value = 0 } }
						wealth = 100
					}
					set_variable = { which = province_offer value = 0 }
					export_to_variable = { which = province_offer value = treasury }
                    set_character_flag = haggle_price
					log = "[This.GetBestName]([This.GetID]) can't even afford the reduced haggle price - they are offering what they have instead."
                }

				event_target:adventurer_target = { letter_event = { id = tsk_andal_mig.6 } }
			}
		}
	}
}

#They accept the offer
letter_event = {
    id = tsk_andal_mig.5
	picture = GFX_evt_andals
    border = GFX_event_letter_frame_diplomacy

    desc = {
    	trigger = {
    		event_target:selling_province = { always = yes }
    		event_target:marriage_child = { always = yes }
			NOT = { has_flag = target_will_marry }
    	}
    	text = EVTDESC_tsk_andal_mig_5_A
    }
    desc = {
    	trigger = {
    		event_target:selling_province = { always = yes }
    		NOT = { event_target:marriage_child = { always = yes } }
    	}
    	text = EVTDESC_tsk_andal_mig_5_B
    }
    desc = {
    	trigger = {
    		event_target:selling_province = { always = yes }
    		event_target:marriage_child = { always = yes }
			has_flag = target_will_marry
    	}
    	text = EVTDESC_tsk_andal_mig_5_C
    }

    is_triggered_only = yes

    immediate = { 
    	hidden_effect = {
        	set_variable = { which = transfer_money value = 0 }
        	change_variable = { which = transfer_money which = price which = event_target:selling_province }

	        event_target:raiding_adventurer = {
	    		set_variable = { which = transfer_money value = 0 }
	    		change_variable = { which = transfer_money which = price which = event_target:selling_province }
	    		multiply_variable = { which = transfer_money value = -1 }
	    	}
        }
    }

	option = { 
        name = EVTOPTA_tsk_andal_mig_5

        #Transfers the price of the selling province
        wealth = transfer_money

        hidden_effect = {
        	event_target:raiding_adventurer = {
		    	wealth = transfer_money
				clr_character_flag = raiding_adventurer #flag set in hl_raiding_adventurers_events.txt
			}

            #Non-Aggression Pact
            opinion = {
                modifier = in_non_aggression_pact
                years = 3
                who = FROM
                origin_description = EVTTITLE_tsk_andal_mig_4
            }
            FROM = {
                opinion = {
                    modifier = in_non_aggression_pact
                    years = 3
                    who = ROOT
                    origin_description = EVTTITLE_tsk_andal_mig_4
                }
            }
        } 
       
        #Changes opinions/prestige if not your province 
        if = {
        	limit = { NOT = { event_target:selling_province = { owner = { character = ROOT } } } }

        	prestige = -50

        	event_target:selling_province = {
        		owner = {
        			opinion = {
        				who = ROOT
        				modifier = sold_my_province
        				years = 100
        			}
        		}
        	}
        	if = {
        		limit = { any_vassal = { NOT = { any_demesne_province = { province = event_target:selling_province } } } }
        		custom_tooltip = { text = EVTOPTA_tsk_andal_mig_3_tooltip }
        	}
        	hidden_effect = {
	        	any_vassal = {
	        		limit = { NOT = { any_demesne_province = { province = event_target:selling_province } } }
	        		opinion = {
	        			who = ROOT
	    				modifier = sold_vassal_province
	    				years = 5
	    			}
	        	}
        	}
        }
		
		#Government switch
		if = {
			limit = {
				event_target:raiding_adventurer = { is_nomadic = yes }
				is_nomadic = no
			}
			event_target:raiding_adventurer = {
				set_government_type = feudal_government
			}
		}

        #Grants province and sets liege
        event_target:selling_province = {
			show_scope_change = no
			custom_tooltip = {
				text = EVTOPTA_tsk_andal_mig_3_tooltip1
				culture = andal
				random_list = {
					85 = { religion = the_seven }
					5 = { religion = the_seven_gods }
					3 = { religion = the_mother }
					3 = { religion = the_stranger }
					3 = { religion = the_smith }
				}
			}
        	county = {
				grant_title = event_target:raiding_adventurer
			}
        }
		event_target:raiding_adventurer = { set_defacto_liege = ROOT }
		
        #Logging for displaced prince...
        if = {
            limit = { event_target:raiding_adventurer = { has_character_flag = is_displaced_prince } }
            log = "Displaced royal: [raiding_adventurer.GetBestName] settled after buying the province [selling_province.GetName] to the price of [transfer_money.GetValue] ducats, from [Root.GetBestName]."
        }
        else = {
		  log = "Adventurer [raiding_adventurer.GetBestName] settled after buying the province [selling_province.GetName] to the price of [transfer_money.GetValue] ducats."
        }

        #Chance to convert to your religion (unless it's a Chinese royal...)
        hidden_effect = {
            if = {
				limit = { 
					event_target:raiding_adventurer = { 
						NOR = {
							has_character_flag = is_displaced_prince
							religion = ROOT
						}
					} 
				}
                event_target:raiding_adventurer = { character_event = { id = tsk_andal_mig.7 } }
            }
        }

        #Make country safe
        hidden_effect = {
        	any_realm_province = {
        		add_province_modifier = {
        			name = settled_adventurer
        			years = 10
        		}
        	}
			event_target:raiding_adventurer = {
				any_unit = {
					set_can_toggle_looting = yes
					set_looting = no
				}
				set_looter_hostility_days = {
					who = ROOT
					days = 0
				}
			}
			set_looter_hostility_days = {
				who = event_target:raiding_adventurer
				days = 0
			}
        }
		
		if = {
			limit = {
				event_target:marriage_child = { always = yes }
			}
			if = {
				limit = {
					NOT = { has_flag = target_will_marry }
				}
				event_target:marriage_child = {
					if = {
						limit = { is_female = no }
						add_spouse_matrilineal = event_target:raiding_adventurer
					}
					if = {
						limit = { is_female = yes }
						add_spouse = event_target:raiding_adventurer
					}
				}
			}
			else_if = {
				limit = {
					has_flag = target_will_marry
				}
				event_target:marriage_child = {
					if = {
						limit = { is_female = no }
						add_spouse_matrilineal = event_target:adventurer_target
					}
					if = {
						limit = { is_female = yes }
						add_spouse = event_target:adventurer_target
					}
				}
			}
		}
    }

    after = {
    	clr_character_flag = adventurer_unsafe_duchy_war
		clr_character_flag = adventurer_safe_duchy_war
		clr_character_flag = negotiating_with_adventurer
		clr_character_flag = target_will_marry
    }
}

#They have a counter-offer
letter_event = {
    id = tsk_andal_mig.6
	picture = GFX_evt_andals
	
    desc = {
        trigger = { FROM = { has_character_flag = haggle_price } } #They have enough money and offer to haggle
        text = EVTDESC_tsk_andal_mig_6
    }
    desc = {
        trigger = { FROM = { has_character_flag = no_haggling } } #They do not have enough money to haggle and demand it for free
        text = EVTDESC_tsk_andal_mig_6_B
    }
    border = GFX_event_letter_frame_diplomacy

    is_triggered_only = yes

    immediate = { 
    	#Calculates your gain before option so tooltips are correct
    	hidden_effect = {
        	set_variable = { which = transfer_money value = 0 }
        	change_variable = { which = transfer_money which = province_offer which = event_target:raiding_adventurer }
        }
    }

    #Accept
    option = {
        name = EVTOPTA_tsk_andal_mig_6

        #Transfers the province offer made by the adventurer.
        if = {
            limit = { FROM = { has_character_flag = haggle_price } }
            wealth = transfer_money
        }

        hidden_effect = {
            if = {
                limit = { FROM = { has_character_flag = haggle_price } }
        	    event_target:raiding_adventurer = {
        	   	multiply_variable = { which = province_offer value = -1 }
        	   	wealth = province_offer
        	   	clr_character_flag = raiding_adventurer #flag set in hl_raiding_adventurers_events.txt
        	   }	
            }

            #Non-Aggression Pact
            opinion = {
                modifier = in_non_aggression_pact
                years = 3
                who = FROM
                origin_description = EVTTITLE_tsk_andal_mig_4
            }
            FROM = {
                opinion = {
                    modifier = in_non_aggression_pact
                    years = 3
                    who = ROOT
                    origin_description = EVTTITLE_tsk_andal_mig_4
                }
            }
        }

        #Changes opinions/prestige if not your province 
        if = {
        	limit = { NOT = { event_target:selling_province = { owner = { character = ROOT } } } }

        	prestige = -50

        	event_target:selling_province = {
        		owner = {
        			opinion = {
        				who = ROOT
        				modifier = sold_my_province
        				years = 100
        			}
        		}
        	}
        	if = {
        		limit = { any_vassal = { NOT = { any_demesne_province = { province = event_target:selling_province } } } }
        		custom_tooltip = { text = EVTOPTA_tsk_andal_mig_3_tooltip }
        	}
        	hidden_effect = {
	        	any_vassal = {
	        		limit = { NOT = { any_demesne_province = { province = event_target:selling_province } } }
	        		opinion = {
	        			who = ROOT
	    				modifier = sold_vassal_province
	    				years = 5
	    			}
	        	}
        	}
        }

        #Gives province and sets liege
        event_target:selling_province = {
        	county = { grant_title = event_target:raiding_adventurer } 
        }
        event_target:raiding_adventurer = { set_defacto_liege = ROOT }
		
		#Government switch
		set_government_type = feudal_government

        #Logging for displaced prince...
        if = {
            limit = { event_target:raiding_adventurer = { has_character_flag = is_displaced_prince } }
            log = "Displaced royal: [raiding_adventurer.GetBestName] settled after buying the province [selling_province.GetName] to the price of [transfer_money.GetValue] ducats, from [Root.GetBestName]."
        }		
		if = {
			limit = {
				NOT = { FROM = { has_character_flag = no_haggling } }
			}
			log = "Adventurer [raiding_adventurer.GetBestName]([raiding_adventurer.GetID]) settled after buying the province [selling_province.GetName] to the haggle price of [transfer_money.GetValue] ducats."
		}
		if = {
			limit = {
				FROM = { has_character_flag = no_haggling }
			}
			log = "Adventurer [raiding_adventurer.GetBestName]([raiding_adventurer.GetID]) was given the province of [selling_province.GetName] after [raiding_adventurer.GetSheHe] couldn't afford to buy it."
		}

        #Chance to convert to your religion (unless it's a Chinese royal...)
        hidden_effect = {
            if = { 
				limit = { 
					event_target:raiding_adventurer = { 
						NOR = {
							has_character_flag = is_displaced_prince
							religion = ROOT
						}
					} 
				}
                event_target:raiding_adventurer = { character_event = { id = tsk_andal_mig.7 } }
            }
        }

        #Make country safe
        hidden_effect = {
        	any_realm_province = {
        		add_province_modifier = {
        			name = settled_adventurer
        			years = 10
        		}
        	}
			event_target:raiding_adventurer = {
				any_unit = {
					set_can_toggle_looting = yes
					set_looting = no
				}
				set_looter_hostility_days = {
					who = ROOT
					days = 0
				}
			}
			set_looter_hostility_days = {
				who = event_target:raiding_adventurer
				days = 0
			}
        }

        ai_chance = {
        	factor = 50
        	modifier = { trait = craven factor = 2 }
        	modifier = { trait = greedy factor = 1.3 }
        	modifier = { event_target:raiding_adventurer = { realm_levy_diff = { who = ROOT value = 1500 } } factor = 1.3 }
        	modifier = { event_target:raiding_adventurer = { realm_levy_diff = { who = ROOT value = 3000 } } factor = 1.5 }
        	modifier = { event_target:raiding_adventurer = { realm_levy_diff = { who = ROOT value = 5000 } } factor = 1.5 }
        }
    }

    #Decline
    option = {
        name = EVTOPTD_tsk_andal_mig_6
        custom_tooltip = { text = EVTOPTD_tsk_andal_mig_6_TT }
		
		trigger = {
			event_target:adventurer_target = {
				NOT = {
					has_character_flag = peaceful_negotiation
				}
			}
		}

        #Adventurer declares war
    	raiding_adventurer_war_declaration_effect = yes

    	ai_chance = {
        	factor = 50
        	modifier = { realm_levy_diff = { who = event_target:raiding_adventurer value = 1000 } factor = 1.3 }
        	modifier = { realm_levy_diff = { who = event_target:raiding_adventurer value = 2500 } factor = 1.3 }
        	modifier = { trait = brave factor = 2 }
        	modifier = { trait = wroth factor = 1.5 }
        	modifier = { trait = ambitious factor = 1.5 }
        	modifier = { event_target:raiding_adventurer = { NOT = { has_character_flag = haggle_price } } factor = 5 }
        	modifier = { event_target:selling_province = { holder_scope = { character = ROOT } } factor = 1.5 }
        }
    }
	
	#Decline - peaceful
    option = {
        name = EVTOPTE_tsk_andal_mig_6
        custom_tooltip = { text = EVTOPTE_tsk_andal_mig_6_TT }
		
		trigger = {
			event_target:adventurer_target = {
				has_character_flag = peaceful_negotiation
			}
		}
		
		clr_character_flag = peaceful_negotiation

    	ai_chance = {
        	factor = 50
        	modifier = { realm_levy_diff = { who = event_target:raiding_adventurer value = 1000 } factor = 1.3 }
        	modifier = { realm_levy_diff = { who = event_target:raiding_adventurer value = 2500 } factor = 1.3 }
        	modifier = { trait = brave factor = 2 }
        	modifier = { trait = wroth factor = 1.5 }
        	modifier = { trait = ambitious factor = 1.5 }
        	modifier = { event_target:raiding_adventurer = { NOT = { has_character_flag = haggle_price } } factor = 5 }
        	modifier = { event_target:selling_province = { holder_scope = { character = ROOT } } factor = 1.5 }
        }
    }

    after = {
    	hidden_effect = {
	    	clr_character_flag = adventurer_unsafe_duchy_war
			clr_character_flag = adventurer_safe_duchy_war
			clr_character_flag = negotiating_with_adventurer
			clr_character_flag = target_will_marry
			event_target:raiding_adventurer = { clr_character_flag = haggle_price }
    	}
    }
}

#Change religion etc. of settled adventurer
character_event = {
    id = tsk_andal_mig.7
    hide_window = yes
    is_triggered_only = yes
	picture = GFX_evt_andals
	
    trigger = {
    	NOT = { liege = { religion = ROOT } }
    }

    option = { 
    	random_list = {
    		80 = {
    			modifier = { trait = cynical factor = 5 }
    			modifier = { trait = content factor = 5 }
    			modifier = { trait = craven factor = 5 }
    			liege = {
					ROOT = { religion = PREV }
					character_event = { id = tsk_andal_mig.8 days = 7 }
				}
    			any_courtier = {
    				limit = { is_landed = no }
    				religion = ROOT
    			}
    		}
    		20 = {
    			modifier = { trait = zealous factor = 5 }
    			#Does not convert
    		}
    	}
    }
}

letter_event = { # Religion flip notification event
    id = tsk_andal_mig.8
    desc = EVTDESC_tsk_andal_mig_8
	picture = GFX_evt_andals
	
    is_triggered_only = yes
	
	option = {     
        name = EXCELLENT
    }
}

# Andals are seen in your realm
province_event = {
	id = tsk_andal_mig.9
	desc = EVTDESC_tsk_andal_mig_9
	picture = GFX_evt_andals
	
	trigger = {
		any_neighbor_province = {
			has_owner = yes
			culture_group = andal
			NOT = { owner = { same_realm = FROM } }
		}
		FROM = { NOT = { culture_group = andal } }
		region = world_westeros
		NOR = {
			culture_group = andal
			has_global_flag = andal_invasion_ended
		}
	}
	
	mean_time_to_happen = {
		years = 10
		modifier = {
			factor = 1.5
			NOT = { religion_group = the_seven_group }
		}
		modifier = {
			factor = 1.3
			NOT = { culture_group = andal }
		}
		modifier = {
			factor = 0.7
			religion_group = the_seven_group
		}
		modifier = {
			factor = 0.9
			culture_group = andal
		}
	}
	
	option = {
		name = EVTOPT_A_tsk_andal_mig_9

		culture = andal
		random_list = {
			85 = { religion = the_seven }
			5 = { religion = the_seven_gods }
			3 = { religion = the_mother }
			3 = { religion = the_stranger }
			3 = { religion = the_smith }
		}
		owner = {
			random_list = {
				50 = {
					modifier = {
						factor = 0
						NOT = { has_religion_feature = religion_matriarchal }
						gender_equality_trigger = no
					}
					create_random_soldier = {
						random_traits = yes
						culture = andal
						religion = the_seven
						dynasty = none
						female = yes
						attributes = {
							diplomacy = 2
							martial = 5
							stewardship = 2
							intrigue = 2
							learning = 2
						}
					}
				}
				50 = {
					modifier = {
						factor = 0
						has_religion_feature = religion_matriarchal
					}
					create_random_soldier = {
						random_traits = yes
						culture = andal
						religion = the_seven
						dynasty = none
						female = no
						attributes = {
							diplomacy = 2
							martial = 5
							stewardship = 2
							intrigue = 2
							learning = 2
						}
					}
				}
			}
			new_character = {
				remove_trait = dull

				random_list = {
					60 = { }
					40 = { change_martial = 1 }
					20 = { change_martial = 2 }
					10 = { change_martial = 3 }
					5  = { change_martial = 4 }
					2  = { change_martial = 5 }
				}
				random_list = {
					50 = { }
					12 = { add_trait = duelist }
					12 = { add_trait = hunter }
					12 = { add_trait = strategist }
					8  = { add_trait = robust }
					3  = { add_trait = tall }
				}
				if = {
					limit = { any_owned_bloodline = { has_bloodline_flag = bloodline_inspire_commanders } }
					remove_trait = craven
					change_diplomacy = 1
					change_learning = 1
					change_stewardship = 1
					change_intrigue = 1
					change_martial = 1
					if = {
						limit = { trait = misguided_warrior }
						remove_trait = misguided_warrior
						add_trait = tough_soldier
					}
					if = {
						limit = { trait = tough_soldier }
						remove_trait = tough_soldier
						add_trait = skilled_tactician
					}
					if = {
						limit = { trait = skilled_tactician }
						remove_trait = skilled_tactician
						add_trait = brilliant_strategist
					}
					random_list = {
						60 = { }
						40 = { change_martial = 1 }
						20 = { change_martial = 2 }
						10 = { change_martial = 3 }
						5  = { change_martial = 4 }
						2  = { change_martial = 5 }
					}
					random_list = {
						50 = { }
						12 = { add_trait = duelist }
						12 = { add_trait = hunter }
						12 = { add_trait = strategist }
						8  = { add_trait = robust }
						3  = { add_trait = tall }
					}
				}
				random = {
					chance = 3
					modifier = {
						factor = 0
						NOT = { has_dlc = "Reapers" }
					}
					add_trait = one_eyed
				}
				remove_trait = dim
				remove_trait = slow
				remove_trait = imbecile
				remove_trait = delicate
				remove_trait = weak
				PREV = { move_character = THIS }
			}
		}
	}
	
	option = {
		name = EVTOPT_B_tsk_andal_mig_9
	}
}